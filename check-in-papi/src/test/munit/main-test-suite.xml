<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="main-test-suite.xml" />
  <sub-flow name="happy-sapi-mocks" doc:id="9c281fce-2cad-4e4d-8db1-67ff442cbd81" >
    <munit-tools:mock-when doc:name="check-in-flights-management" doc:id="9d5ee292-4436-4376-b726-9f233e8a82e2" processor="flow-ref">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute whereValue="check-in-flights-management" attributeName="name" />
        </munit-tools:with-attributes>
        <munit-tools:then-return>
          <munit-tools:payload value="#[output application/json --- {}]" />
        </munit-tools:then-return>
      </munit-tools:mock-when>
    <munit-tools:mock-when doc:name="register-passenger-data" doc:id="2252fc04-9f1c-4f8e-b547-47c784a0fee6" processor="flow-ref">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute whereValue="register-passenger-data" attributeName="name" />
        </munit-tools:with-attributes>
        <munit-tools:then-return>
          <munit-tools:payload value="#[output application/json --- {}]" />
        </munit-tools:then-return>
      </munit-tools:mock-when>
    <munit-tools:mock-when doc:name="create-payment-for-bags" doc:id="760dd978-f247-4928-a0ae-91b707938180" processor="flow-ref">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute whereValue="create-payment-for-bags" attributeName="name" />
        </munit-tools:with-attributes>
        <munit-tools:then-return>
          <munit-tools:payload value="#[output application/json --- {}]" />
        </munit-tools:then-return>
      </munit-tools:mock-when>
  </sub-flow>
  <munit:test name="payment-approval-by-pnrTest" doc:id="e8a1b654-272a-4867-83c0-76614f9f8d55" description="Test">
    <munit:execution >
      <flow-ref doc:name="Flow-ref to payment-approval-by-pnr" doc:id="0dccb296-0def-4d01-b234-eba79d375b19" name="payment-approval-by-pnr"/>
    </munit:execution>
  </munit:test>
  <munit:test name="check-in-by-pnrTest" doc:id="5b83a5a7-78a5-4acd-a55e-2675b7190a24" description="Test">
    <munit:behavior >
      <munit-tools:spy doc:name="Spy" doc:id="407f30df-def5-41e1-8e27-ab6e5c15f9db" processor="set-variable">
        <munit-tools:with-attributes >
          <munit-tools:with-attribute whereValue="checkin" attributeName="variableName" />
          <munit-tools:with-attribute whereValue="checkin" attributeName="variableName" />
          <munit-tools:with-attribute whereValue="checkin" attributeName="variableName" />
          <munit-tools:with-attribute whereValue="checkin" attributeName="variableName" />
          <munit-tools:with-attribute whereValue="checkin" attributeName="variableName" />
        </munit-tools:with-attributes>
        <munit-tools:after-call>
          <munit-tools:assert-that doc:name="Assert that" doc:id="104a3689-0eeb-4ac0-be03-b8a7984202e7" expression="#[vars.checkin]" is="#[MunitTools::equalTo(read(MunitTools::getResourceAsString('json/check-in-by-pnr-request.json'), 'application/json'))]"/>
        </munit-tools:after-call>
      </munit-tools:spy>
      <flow-ref doc:name="happy-sapi-mocks" doc:id="0f4f0245-7cb0-408a-be1c-db5938dea700" name="happy-sapi-mocks" />
    </munit:behavior>
    <munit:execution >
      <munit:set-event doc:name="Set Event" doc:id="446f9e92-c04e-4cca-a182-d758452b1b86" >
        <munit:payload value="#[output application/json &#10;---&#10;TestData::checkIn&#10;]" />
        <munit:variables >
          <munit:variable key="PNR" value="#[TestData::pnr]" />
        </munit:variables>
      </munit:set-event>
      <flow-ref doc:name="Flow-ref to check-in-by-pnr" doc:id="a3215ba1-310c-4cc5-9f23-402436d271d7" name="check-in-by-pnr"/>
    </munit:execution>
    <munit:validation >
      <munit-tools:verify-call doc:name="check-in-flights-management" doc:id="aa9dc09a-2bcb-491c-9a58-ab102e16cd14" processor="flow-ref" times="1">
        <munit-tools:with-attributes >
          <munit-tools:with-attribute whereValue="check-in-flights-management" attributeName="name" />
        </munit-tools:with-attributes>
      </munit-tools:verify-call>
      <munit-tools:assert-that doc:name="Assert that" doc:id="39383c05-9755-4b2c-ab3c-d950bcdbff36" is="#[MunitTools::equalTo(TestData::checkInByPNRResp)]" expression="#[payload]"/>
    </munit:validation>
  </munit:test>


</mule>
